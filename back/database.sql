CREATE DATABASE sch_portal_vagas;
CREATE USER usuario_app WITH PASSWORD 'usuario_app';
CREATE SCHEMA IF NOT EXISTS sch_portal_vagas AUTHORIZATION usuario_app;
GRANT CONNECT ON DATABASE sch_portal_vagas TO usuario_app;
GRANT USAGE ON SCHEMA sch_portal_vagas TO usuario_app;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA sch_portal_vagas TO usuario_app;
ALTER DEFAULT PRIVILEGES IN SCHEMA sch_portal_vagas GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO usuario_app;

CREATE TABLE IF NOT EXISTS SCH_PORTAL_VAGAS.JOB (

    ID INT GENERATED ALWAYS AS IDENTITY,
    TITLE TEXT NOT NULL,
    DESCRIPTION TEXT NOT NULL,
    COMPANY TEXT NOT NULL,
    PUBLISH_DATE DATE NOT NULL,
    EXPIRE_DATE DATE NOT NULL,
    EXPERTISE_LEVEL TEXT NOT NULL,
    TYPE_OF_JOB TEXT NOT NULL,
    TEMPORARY BOOLEAN NOT NULL,
    ACCEPT_PCD BOOLEAN NOT NULL,
    STATE INT NOT NULL,
    CITY TEXT NOT NULL,
    LOCATION TEXT NOT NULL,

    CONSTRAINT ID_JOB_PK PRIMARY KEY (ID)

);

CREATE TABLE IF NOT EXISTS SCH_PORTAL_VAGAS.APP_USER (

    ID INT GENERATED ALWAYS AS IDENTITY,
    NAME TEXT NOT NULL,
    EMAIL TEXT NOT NULL,
    PASSWORD TEXT NOT NULL,

    CONSTRAINT ID_USER_PK PRIMARY KEY (ID)

);

CREATE TABLE IF NOT EXISTS SCH_PORTAL_VAGAS.PERMISSION_LEVEL (

    ID INT GENERATED ALWAYS AS IDENTITY,
    ID_USER INT NOT NULL,
    PERMISSION_LEVEL INT NOT NULL,

    CONSTRAINT ID_PER_LEVEL_PK PRIMARY KEY (ID),
    CONSTRAINT ID_USER_FK FOREIGN KEY (ID_USER) REFERENCES SCH_PORTAL_VAGAS.JOB(ID)

);